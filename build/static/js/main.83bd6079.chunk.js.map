{"version":3,"sources":["components/common/jumbo.jsx","components/common/searchBox.jsx","components/resources/titleService.js","components/resources/employeeResources.js","components/common/counter.jsx","components/common/tableHeader.jsx","components/Employees/employeesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","components/Employees/employees.jsx","components/utils/paginate.js","App.js","serviceWorker.js","index.js"],"names":["styles","jumbo","margin","marginBottom","backgroundColor","color","heading","fontFamily","fontSize","lead","letterSpacing","Jumbo","className","style","aria-hidden","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","titles","_id","employees","firstName","lastName","title","dailyRentalRate","publishDate","getEmployees","Counter","state","count","this","length","float","Component","TableHeader","raiseSort","path","sortColumn","props","order","onSort","cursor","columns","map","column","key","onClick","label","EmployeesTable","onDelete","employee","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","item","id","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","console","log","pagesCount","Math","ceil","pages","_","range","aria-label","page","Employees","searchQuery","selectedTitle","handleDelete","filter","emp","setState","handlePageChange","handleTitleSelect","handleSearch","query","currentPAge","handleSort","t","allEmployees","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","Paginate","orderBy","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.83bd6079.chunk.js","sourcesContent":["import React from \"react\";\n\nconst styles = {\n  jumbo: {\n    margin: \"0\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#0D4F8B\",\n    color: \"white\",\n  },\n  heading: {\n    fontFamily: \"impact\",\n    fontSize: \"4em\",\n  },\n  lead: {\n    letterSpacing: \".12em\",\n    //fontFamily: \"Fedra Sans\",\n  },\n};\n\nfunction Jumbo() {\n  return (\n    <div className=\"jumbo\">\n      <div style={styles.jumbo} className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 style={styles.heading} className=\"display-4\">\n            DUNDER MIFFLIN\n          </h1>\n          <p style={styles.lead} className=\"lead\">\n            Paper Company <i className=\"fa fa-users\" aria-hidden=\"true\"></i>{\" \"}\n            Employee Directory\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbo;\n","import React from \"react\";\n\nfunction SearchBox({ value, onChange }) {\n  return (\n    <div className=\"form-container\">\n      <form className=\"search\">\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={value}\n            className=\"form-control\"\n            placeholder=\"Search by last name\"\n            onChange={(e) => onChange(e.currentTarget.value)}\n          />\n          <button\n            type=\"submit\"\n            // onClick={props.handleFormSubmit}\n            className=\"btn btn-warning btn-sm m-2\"\n          >\n            Search\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBox;\n","export const titles = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Regional Manager\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Assistant Regional Manager\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Regional Sales Director\" },\n  { _id: \"5b21ca3eeb7f6fbccd471821\", name: \"Senior Accountant\" },\n  { _id: \"5b21ca3eeb7f6fbccd471822\", name: \"Assistant to Regional Manager\" },\n  { _id: \"5b21ca3eeb7f6fbccd471824\", name: \"Warehouse Forman\" },\n  { _id: \"5b21ca3eeb7f6fbccd471825\", name: \"Customer Service\" },\n  { _id: \"5b21ca3eeb7f6fbccd471823\", name: \"Receptionist\" },\n];\n\nexport function getTitles() {\n  return titles.filter((t) => t);\n}\n","// eslint-disable-next-line\nimport * as titlesAPI from \"./titleService\";\n\nconst employees = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    firstName: \"Michael\",\n    lastName: \"Scott\",\n    title: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Regional Manager\" },\n    dailyRentalRate: 85000,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    firstName: \"Jim\",\n    lastName: \"Halpert\",\n    title: {\n      _id: \"5b21ca3eeb7f6fbccd471814\",\n      name: \"Assistant Regional Manager\",\n    },\n    dailyRentalRate: 50000,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    firstName: \"Andy\",\n    lastName: \"Bernard\",\n    title: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Regional Sales Director\" },\n    dailyRentalRate: 60000,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    firstName: \"Angela\",\n    lastName: \"Martin\",\n    title: { _id: \"5b21ca3eeb7f6fbccd471821\", name: \"Senior Accountant\" },\n    dailyRentalRate: 65000,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    firstName: \"Dwight\",\n    lastName: \"Schrute\",\n    title: {\n      _id: \"5b21ca3eeb7f6fbccd471822\",\n      name: \"Assistant to Regional Manager\",\n    },\n    dailyRentalRate: 55000,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    firstName: \"Pam\",\n    lastName: \"Beesly\",\n    title: { _id: \"5b21ca3eeb7f6fbccd471823\", name: \"Receptionist\" },\n    dailyRentalRate: 35000,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    firstName: \"Darryl\",\n    lastName: \"Philbin\",\n    title: { _id: \"5b21ca3eeb7f6fbccd471824\", name: \"Warehouse Forman\" },\n    dailyRentalRate: 60000,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    firstName: \"Kelly\",\n    lastName: \"Kapoor\",\n    title: { _id: \"5b21ca3eeb7f6fbccd471825\", name: \"Customer Service\" },\n    dailyRentalRate: 40000,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    firstName: \"Meredith\",\n    lastName: \"Palmer\",\n    title: { _id: \"5b21ca3eeb7f6fbccd471825\", name: \"Customer Service\" },\n    dailyRentalRate: 40000,\n  },\n];\n\nexport function getEmployees() {\n  return employees;\n}\n\nexport function getEmployee(id) {\n  return employees.find((emp) => emp._id === id);\n}\n\n// export function saveEmployee(employee) {\n//   let employeeInDb = employees.find((emp) => emp._id === employee._id) || {};\n//   employeeInDb.name = employee.name;\n//   employeeInDb.title = titlesAPI.titles.find((t) => t._id === employee.titleId);\n//   employeeInDb.lastName = employee.lastName;\n//   employeeInDb.dailyRentalRate = employee.dailyRentalRate;\n\n//   if (!employeeInDb._id) {\n//     employeeInDb._id = Date.now();\n//     employees.push(employeeInDb);\n//   }\n\n//   return employeeInDb;\n// }\n\nexport function deleteEmployee(id) {\n  let employeeInDb = employees.find((emp) => emp._id === id);\n  employees.splice(employees.indexOf(employeeInDb), 1);\n  return employeeInDb;\n}\n","import React, { Component } from \"react\";\nimport { getEmployees } from \"../resources/employeeResources\";\n\nclass Counter extends Component {\n  state = {\n    employees: getEmployees(),\n  };\n\n  render() {\n    const { length: count } = this.state.employees;\n    if (count === 0) return <p> There are no employees in the Database </p>;\n\n    return (\n      <>\n        <p\n          style={{\n            fontFamily: \"impact\",\n            fontSize: \"1.6em\",\n            color: \"darkgray\",\n            letterSpacing: \".07em\",\n            float: \"left\",\n          }}\n        >\n          {\" \"}\n          {count} EMPLOYEES EXIST IN THE DATABASE <br />\n          SORT BY COLUMN HEADING // FILTER BY TITLE\n        </p>\n      </>\n    );\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\n\n//interface of this component\n//pass columns: array\n//sortColumn: obj\n//onSort: function\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    //Handle both ascending and descending sorting\n    //Clone and compare to change sort order, otherwise sort ascending\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn); //raise sort event\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr\n          style={{\n            fontFamily: \"impact\",\n            fontSize: \"1.3em\",\n            cursor: \"pointer\",\n          }}\n        >\n          {this.props.columns.map((column) => (\n            <th\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport TableHeader from \"../common/tableHeader\";\n// import TableBody from \"../common/tableBody\";\n\nclass EmployeesTable extends Component {\n  columns = [\n    { path: \"firstName\", label: \"FIRST NAME\" },\n    { path: \"lastName\", label: \"LAST NAME\" },\n    { path: \"title\", label: \"TITLE\" },\n    { path: \"dailyRentalRate\", label: \"RATE/YR\" },\n    { key: \"delete\", label: \"DELETE EMPLOYEE\" },\n  ];\n  render() {\n    const { employees, onDelete, onSort, sortColumn } = this.props;\n\n    return (\n      <table className=\"table\">\n        <TableHeader\n          columns={this.columns}\n          sortColumn={sortColumn}\n          onSort={onSort}\n        />\n        {/* <TableBody columns={this.columns} data={employees} /> */}\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee._id}>\n              <td>{employee.firstName}</td>\n              <td>{employee.lastName}</td>\n              <td>{employee.title.name}</td>\n              <td>${employee.dailyRentalRate}</td>\n              <td>\n                <button\n                  onClick={() => onDelete(employee)}\n                  className=\"btn btn-danger btn-sm\"\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default EmployeesTable;\n","import React from \"react\";\n\nconst ListGroup = (props) => {\n  const {\n    items,\n    textProperty,\n    valueProperty,\n    selectedItem,\n    onItemSelect,\n  } = props;\n\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          id=\"list-group-item\"\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\"; //Use PropTypes to catch bugs related to type-checking\n\nconst Pagination = (props) => {\n  //Create an array of page numbers and use the map method to map each item to an <li>, then render the page number dynamically to create our pagination\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  console.log(currentPage);\n\n  //Round decimals to the next integer\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  //If there is only one page do not render pagination\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav aria-label=\"Page navigation\">\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            //Dynamically render the active state when on the current page\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            {/* eslint-disable-next-line */}\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\n//Specify the types for each pagination prop and if it is required\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Jumbo from \"../common/jumbo\";\nimport SearchBox from \"../common/searchBox\";\nimport Counter from \"../common/counter\";\nimport EmployeesTable from \"./employeesTable\";\nimport ListGroup from \"../common/listGroup\";\nimport Pagination from \"../common/pagination\";\nimport { getEmployees } from \"../resources/employeeResources\";\nimport { getTitles } from \"../resources/titleService\";\nimport { Paginate } from \"../utils/paginate\";\nimport \"./style.css\";\n\nclass Employees extends Component {\n  state = {\n    employees: [],\n    titles: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedTitle: null, //?\n    sortColumn: { path: \"lastName\", order: \"asc\" },\n  };\n\n  //DEFINE STATE AFTER MOUNTING\n  componentDidMount() {\n    const titles = [{ _id: \"\", name: \"ALL EMPLOYEES\" }, ...getTitles()];\n    this.setState({ employees: getEmployees(), titles });\n    console.log(\"mounted\");\n  }\n\n  //EVENT HANDLERS\n  handleDelete = (employee) => {\n    //create new array with all the employees except the one you deleted\n    const employees = this.state.employees.filter(\n      (emp) => emp._id !== employee._id\n    );\n    this.setState({ employees: employees });\n  };\n\n  handlePageChange = (page) => {\n    //set the current page property to current page and update the state\n    this.setState({ currentPage: page });\n  };\n\n  handleTitleSelect = (title) => {\n    console.log(title);\n    this.setState({ selectedTitle: title, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedTitle: null, currentPAge: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  //RENDER MAIN COMPONENT\n  render() {\n    // const { length: count } = this.state.employees;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedTitle,\n      searchQuery,\n      employees: allEmployees,\n    } = this.state;\n\n    //FILTER - If there is a search query, filter results, otherwise if selected title and its id are both truthy, apply a filter, otherwise return all employees\n    let filtered = allEmployees;\n    if (searchQuery) {\n      filtered = allEmployees.filter((emp) =>\n        emp.lastName.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    } else if (selectedTitle && selectedTitle._id) {\n      filtered = allEmployees.filter(\n        (emp) => emp.title._id === selectedTitle._id\n      );\n    } else {\n      filtered = allEmployees;\n    }\n\n    //SORT\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    //PAGINATE - Target items needed for pagintion\n    const employees = Paginate(sorted, currentPage, pageSize);\n\n    //RENDER - If there are employees return a table with employee data\n    return (\n      <>\n        <Jumbo />\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <Counter />\n            </div>\n\n            <div className=\"col-4\">\n              <SearchBox value={searchQuery} onChange={this.handleSearch} />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <ListGroup\n                items={this.state.titles}\n                selectedItem={this.state.selectedTitle}\n                onItemSelect={this.handleTitleSelect}\n              />\n            </div>\n\n            <div className=\"col\">\n              <EmployeesTable\n                employees={employees}\n                sortColumn={sortColumn}\n                onDelete={this.handleDelete}\n                onSort={this.handleSort}\n              />\n\n              <Pagination\n                itemsCount={filtered.length}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                onPageChange={this.handlePageChange}\n              />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Employees;\n","import _ from \"lodash\";\n\nexport function Paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  //convert items array to a lodash wrapper\n  return _(items).slice(startIndex).take(pageSize).value();\n  //use lodash to slice our array starting at the new index\n}\n","import React from \"react\";\nimport Employees from \"./components/Employees/employees\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <Employees />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}